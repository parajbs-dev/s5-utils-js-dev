"use strict";
/* istanbul ignore file */
Object.defineProperty(exports, "__esModule", { value: true });
exports.generate_key_From_Seed = exports.generate_key = exports.KEY_LENGTH = exports.ENCRYPTED_BLOB_HASH_LENGTH = exports.CHUNK_LENGTH_AS_POWEROF2_LENGTH = exports.ENCRYPTION_ALGORITHM_LENGTH = exports.CID_TYPE_ENCRYPTED_LENGTH = exports.chunkSizeAsPowerOf2 = exports.generateEncryptedCIDFromMHash = exports.encryptFileV1 = exports.getXchacha20KeyAndClear = exports.encryptFileXchacha20 = exports.generateKeyXchacha20 = exports.checkOptsLocationsAPI = exports.getS5LocationsApiHost = exports.getStreamingLocation = exports.streamingUrlCache = exports._base64ToUint8Array = exports.hashToBase64UrlNoPadding = exports.decodeEndian = exports.getEncryptedFileUrl = exports.compareB3hash = exports.decryptFile = exports.decryptStream = exports.hashStream = exports.decryptFileXchacha20 = exports.createDownloadFromBlob = exports.createVideoPageInNewTab = exports.createVideoElementFromBlob = exports.getAllInfosFromCid = exports.convertS5CidToB3hashHex = exports.convertS5CidToMHashB64url = exports.checkRawSizeIsNotNull = exports.convertS5CidToCIDBytes = exports.convertS5CidToMHash = exports.convertMHashToB64url = exports.extractB3hashFromCID = exports.extractRawSizeFromCID = exports.extractMHashFromCID = exports.generateCIDFromMHash = exports.extractB3hashFromMHash = exports.generateMHashFromB3hash = exports.calculateB3hashFromArray = exports.calculateB3hashFromFile = exports.decodeBase64URL = exports.encodeBase64URL = exports.decodeBase32RFC = exports.encodeBase32RFC = exports.decodeBase58BTC = exports.encodeBase58BTC = void 0;
exports.cidTypeBridge = exports.cidTypeUserIdentity = exports.cidTypeResolver = exports.cidTypeMetadataWebApp = exports.cidTypeMetadataMedia = exports.cidTypeRaw = exports.validationError = exports.throwValidationError = exports.makeUrl = exports.ensureUrlPrefix = exports.ensureUrl = exports.ensurePrefix = exports.addUrlQuery = exports.getSubdomainFromUrl = exports.addUrlSubdomain = exports.defaultPortalUrl = exports.uriS5Prefix = exports.URI_S5_PREFIX = exports.defaultS5PortalUrl = exports.DEFAULT_S5_PORTAL_URL = exports.convertDownloadDirectoryInputCid = exports.convertB32rfcToB64urlCid = exports.convertB64urlToB32rfcCid = exports.convertB58btcToB64urlCid = exports.convertB64urlToB58btcCid = exports.convertB32rfcToB58btcCid = exports.convertB58btcToB32rfcCid = exports.decodeCIDWithPrefixB = exports.encodeCIDWithPrefixB = exports.decodeCIDWithPrefixU = exports.encodeCIDWithPrefixU = exports.decodeCIDWithPrefixZ = exports.encodeCIDWithPrefixZ = exports.bufToNum = exports.numToBuf = exports.trimSuffix = exports.trimPrefix = exports.getFileMimeType = exports.getTransformerEncrypt = exports.getEncryptedStreamReader = exports.encryptFile = exports.createEncryptedCid = exports.convertBase64urlToBytes = exports.convertBytesToBase64url = exports.combineKeytoEncryptedCid = exports.removeKeyFromEncryptedCid = exports.getKeyFromEncryptedCid = exports.calculateB3hashFromFileEncrypt = exports.concatUint8Arrays = exports.encrypt_file_xchacha20 = void 0;
exports.storageLocationTypeBridge = exports.storageLocationTypeFull = exports.storageLocationTypeFile = exports.storageLocationTypeArchive = exports.metadataProofTypeTimestamp = exports.metadataProofTypeSignature = exports.metadataMediaDetailsIsLive = exports.metadataMediaDetailsDuration = exports.metadataExtensionBridge = exports.metadataExtensionBasicMediaMetadata = exports.metadataExtensionViewTypes = exports.metadataExtensionCategories = exports.metadataExtensionTags = exports.metadataExtensionTimestamp = exports.metadataExtensionPreviousVersions = exports.metadataExtensionUpdateCID = exports.metadataExtensionSourceUris = exports.metadataExtensionLanguages = exports.metadataExtensionWikidataClaims = exports.metadataExtensionDonationKeys = exports.metadataExtensionLicenses = exports.recordTypeRegistryEntry = exports.recordTypeStorageLocation = exports.protocolMethodRegistryQuery = exports.protocolMethodAnnouncePeers = exports.protocolMethodHashQuery = exports.protocolMethodSignedMessage = exports.protocolMethodHandshakeDone = exports.protocolMethodHandshakeOpen = exports.userIdentityLinkPublicFileSystem = exports.userIdentityLinkProfile = exports.authPayloadVersion1 = exports.registryMaxDataSize = exports.parentLinkTypeUserIdentity = exports.metadataTypeUserIdentity = exports.metadataTypeProofs = exports.metadataTypeDirectory = exports.metadataTypeWebApp = exports.metadataTypeMedia = exports.metadataMagicByte = exports.encryptionAlgorithmXChaCha20Poly1305NonceSize = exports.encryptionAlgorithmXChaCha20Poly1305 = exports.mkeyEd25519 = exports.mhashBlake3Default = exports.registryS5MagicByte = exports.cidTypeEncrypted = void 0;
// Main exports.
// basetools exports.
var basetools_1 = require("./utils/basetools");
Object.defineProperty(exports, "encodeBase58BTC", { enumerable: true, get: function () { return basetools_1.encodeBase58BTC; } });
Object.defineProperty(exports, "decodeBase58BTC", { enumerable: true, get: function () { return basetools_1.decodeBase58BTC; } });
Object.defineProperty(exports, "encodeBase32RFC", { enumerable: true, get: function () { return basetools_1.encodeBase32RFC; } });
Object.defineProperty(exports, "decodeBase32RFC", { enumerable: true, get: function () { return basetools_1.decodeBase32RFC; } });
Object.defineProperty(exports, "encodeBase64URL", { enumerable: true, get: function () { return basetools_1.encodeBase64URL; } });
Object.defineProperty(exports, "decodeBase64URL", { enumerable: true, get: function () { return basetools_1.decodeBase64URL; } });
// blake3tools exports.
var blake3tools_1 = require("./utils/blake3tools");
Object.defineProperty(exports, "calculateB3hashFromFile", { enumerable: true, get: function () { return blake3tools_1.calculateB3hashFromFile; } });
Object.defineProperty(exports, "calculateB3hashFromArray", { enumerable: true, get: function () { return blake3tools_1.calculateB3hashFromArray; } });
Object.defineProperty(exports, "generateMHashFromB3hash", { enumerable: true, get: function () { return blake3tools_1.generateMHashFromB3hash; } });
Object.defineProperty(exports, "extractB3hashFromMHash", { enumerable: true, get: function () { return blake3tools_1.extractB3hashFromMHash; } });
Object.defineProperty(exports, "generateCIDFromMHash", { enumerable: true, get: function () { return blake3tools_1.generateCIDFromMHash; } });
Object.defineProperty(exports, "extractMHashFromCID", { enumerable: true, get: function () { return blake3tools_1.extractMHashFromCID; } });
Object.defineProperty(exports, "extractRawSizeFromCID", { enumerable: true, get: function () { return blake3tools_1.extractRawSizeFromCID; } });
Object.defineProperty(exports, "extractB3hashFromCID", { enumerable: true, get: function () { return blake3tools_1.extractB3hashFromCID; } });
Object.defineProperty(exports, "convertMHashToB64url", { enumerable: true, get: function () { return blake3tools_1.convertMHashToB64url; } });
Object.defineProperty(exports, "convertS5CidToMHash", { enumerable: true, get: function () { return blake3tools_1.convertS5CidToMHash; } });
Object.defineProperty(exports, "convertS5CidToCIDBytes", { enumerable: true, get: function () { return blake3tools_1.convertS5CidToCIDBytes; } });
Object.defineProperty(exports, "checkRawSizeIsNotNull", { enumerable: true, get: function () { return blake3tools_1.checkRawSizeIsNotNull; } });
Object.defineProperty(exports, "convertS5CidToMHashB64url", { enumerable: true, get: function () { return blake3tools_1.convertS5CidToMHashB64url; } });
Object.defineProperty(exports, "convertS5CidToB3hashHex", { enumerable: true, get: function () { return blake3tools_1.convertS5CidToB3hashHex; } });
Object.defineProperty(exports, "getAllInfosFromCid", { enumerable: true, get: function () { return blake3tools_1.getAllInfosFromCid; } });
// blobtools exports.
var blobtools_1 = require("./utils/blobtools");
Object.defineProperty(exports, "createVideoElementFromBlob", { enumerable: true, get: function () { return blobtools_1.createVideoElementFromBlob; } });
Object.defineProperty(exports, "createVideoPageInNewTab", { enumerable: true, get: function () { return blobtools_1.createVideoPageInNewTab; } });
Object.defineProperty(exports, "createDownloadFromBlob", { enumerable: true, get: function () { return blobtools_1.createDownloadFromBlob; } });
// decrypt exports.
var decrypt_1 = require("./utils/decrypt");
Object.defineProperty(exports, "decryptFileXchacha20", { enumerable: true, get: function () { return decrypt_1.decryptFileXchacha20; } });
Object.defineProperty(exports, "hashStream", { enumerable: true, get: function () { return decrypt_1.hashStream; } });
Object.defineProperty(exports, "decryptStream", { enumerable: true, get: function () { return decrypt_1.decryptStream; } });
Object.defineProperty(exports, "decryptFile", { enumerable: true, get: function () { return decrypt_1.decryptFile; } });
Object.defineProperty(exports, "compareB3hash", { enumerable: true, get: function () { return decrypt_1.compareB3hash; } });
Object.defineProperty(exports, "getEncryptedFileUrl", { enumerable: true, get: function () { return decrypt_1.getEncryptedFileUrl; } });
Object.defineProperty(exports, "decodeEndian", { enumerable: true, get: function () { return decrypt_1.decodeEndian; } });
Object.defineProperty(exports, "hashToBase64UrlNoPadding", { enumerable: true, get: function () { return decrypt_1.hashToBase64UrlNoPadding; } });
Object.defineProperty(exports, "_base64ToUint8Array", { enumerable: true, get: function () { return decrypt_1._base64ToUint8Array; } });
Object.defineProperty(exports, "streamingUrlCache", { enumerable: true, get: function () { return decrypt_1.streamingUrlCache; } });
Object.defineProperty(exports, "getStreamingLocation", { enumerable: true, get: function () { return decrypt_1.getStreamingLocation; } });
Object.defineProperty(exports, "getS5LocationsApiHost", { enumerable: true, get: function () { return decrypt_1.getS5LocationsApiHost; } });
Object.defineProperty(exports, "checkOptsLocationsAPI", { enumerable: true, get: function () { return decrypt_1.checkOptsLocationsAPI; } });
// encryptV1 exports.
var encryptV1_1 = require("./utils/encryptV1");
Object.defineProperty(exports, "generateKeyXchacha20", { enumerable: true, get: function () { return encryptV1_1.generateKeyXchacha20; } });
Object.defineProperty(exports, "encryptFileXchacha20", { enumerable: true, get: function () { return encryptV1_1.encryptFileXchacha20; } });
Object.defineProperty(exports, "getXchacha20KeyAndClear", { enumerable: true, get: function () { return encryptV1_1.getXchacha20KeyAndClear; } });
Object.defineProperty(exports, "encryptFileV1", { enumerable: true, get: function () { return encryptV1_1.encryptFileV1; } });
Object.defineProperty(exports, "generateEncryptedCIDFromMHash", { enumerable: true, get: function () { return encryptV1_1.generateEncryptedCIDFromMHash; } });
// encryptV2 exports.
var encryptV2_1 = require("./utils/encryptV2");
Object.defineProperty(exports, "chunkSizeAsPowerOf2", { enumerable: true, get: function () { return encryptV2_1.chunkSizeAsPowerOf2; } });
Object.defineProperty(exports, "CID_TYPE_ENCRYPTED_LENGTH", { enumerable: true, get: function () { return encryptV2_1.CID_TYPE_ENCRYPTED_LENGTH; } });
Object.defineProperty(exports, "ENCRYPTION_ALGORITHM_LENGTH", { enumerable: true, get: function () { return encryptV2_1.ENCRYPTION_ALGORITHM_LENGTH; } });
Object.defineProperty(exports, "CHUNK_LENGTH_AS_POWEROF2_LENGTH", { enumerable: true, get: function () { return encryptV2_1.CHUNK_LENGTH_AS_POWEROF2_LENGTH; } });
Object.defineProperty(exports, "ENCRYPTED_BLOB_HASH_LENGTH", { enumerable: true, get: function () { return encryptV2_1.ENCRYPTED_BLOB_HASH_LENGTH; } });
Object.defineProperty(exports, "KEY_LENGTH", { enumerable: true, get: function () { return encryptV2_1.KEY_LENGTH; } });
Object.defineProperty(exports, "generate_key", { enumerable: true, get: function () { return encryptV2_1.generate_key; } });
Object.defineProperty(exports, "generate_key_From_Seed", { enumerable: true, get: function () { return encryptV2_1.generate_key_From_Seed; } });
Object.defineProperty(exports, "encrypt_file_xchacha20", { enumerable: true, get: function () { return encryptV2_1.encrypt_file_xchacha20; } });
Object.defineProperty(exports, "concatUint8Arrays", { enumerable: true, get: function () { return encryptV2_1.concatUint8Arrays; } });
Object.defineProperty(exports, "calculateB3hashFromFileEncrypt", { enumerable: true, get: function () { return encryptV2_1.calculateB3hashFromFileEncrypt; } });
Object.defineProperty(exports, "getKeyFromEncryptedCid", { enumerable: true, get: function () { return encryptV2_1.getKeyFromEncryptedCid; } });
Object.defineProperty(exports, "removeKeyFromEncryptedCid", { enumerable: true, get: function () { return encryptV2_1.removeKeyFromEncryptedCid; } });
Object.defineProperty(exports, "combineKeytoEncryptedCid", { enumerable: true, get: function () { return encryptV2_1.combineKeytoEncryptedCid; } });
Object.defineProperty(exports, "convertBytesToBase64url", { enumerable: true, get: function () { return encryptV2_1.convertBytesToBase64url; } });
Object.defineProperty(exports, "convertBase64urlToBytes", { enumerable: true, get: function () { return encryptV2_1.convertBase64urlToBytes; } });
Object.defineProperty(exports, "createEncryptedCid", { enumerable: true, get: function () { return encryptV2_1.createEncryptedCid; } });
Object.defineProperty(exports, "encryptFile", { enumerable: true, get: function () { return encryptV2_1.encryptFile; } });
Object.defineProperty(exports, "getEncryptedStreamReader", { enumerable: true, get: function () { return encryptV2_1.getEncryptedStreamReader; } });
Object.defineProperty(exports, "getTransformerEncrypt", { enumerable: true, get: function () { return encryptV2_1.getTransformerEncrypt; } });
var file_1 = require("./utils/file");
Object.defineProperty(exports, "getFileMimeType", { enumerable: true, get: function () { return file_1.getFileMimeType; } });
var string_1 = require("./utils/string");
Object.defineProperty(exports, "trimPrefix", { enumerable: true, get: function () { return string_1.trimPrefix; } });
Object.defineProperty(exports, "trimSuffix", { enumerable: true, get: function () { return string_1.trimSuffix; } });
// tools exports.
var tools_1 = require("./utils/tools");
Object.defineProperty(exports, "numToBuf", { enumerable: true, get: function () { return tools_1.numToBuf; } });
Object.defineProperty(exports, "bufToNum", { enumerable: true, get: function () { return tools_1.bufToNum; } });
Object.defineProperty(exports, "encodeCIDWithPrefixZ", { enumerable: true, get: function () { return tools_1.encodeCIDWithPrefixZ; } });
Object.defineProperty(exports, "decodeCIDWithPrefixZ", { enumerable: true, get: function () { return tools_1.decodeCIDWithPrefixZ; } });
Object.defineProperty(exports, "encodeCIDWithPrefixU", { enumerable: true, get: function () { return tools_1.encodeCIDWithPrefixU; } });
Object.defineProperty(exports, "decodeCIDWithPrefixU", { enumerable: true, get: function () { return tools_1.decodeCIDWithPrefixU; } });
Object.defineProperty(exports, "encodeCIDWithPrefixB", { enumerable: true, get: function () { return tools_1.encodeCIDWithPrefixB; } });
Object.defineProperty(exports, "decodeCIDWithPrefixB", { enumerable: true, get: function () { return tools_1.decodeCIDWithPrefixB; } });
Object.defineProperty(exports, "convertB58btcToB32rfcCid", { enumerable: true, get: function () { return tools_1.convertB58btcToB32rfcCid; } });
Object.defineProperty(exports, "convertB32rfcToB58btcCid", { enumerable: true, get: function () { return tools_1.convertB32rfcToB58btcCid; } });
Object.defineProperty(exports, "convertB64urlToB58btcCid", { enumerable: true, get: function () { return tools_1.convertB64urlToB58btcCid; } });
Object.defineProperty(exports, "convertB58btcToB64urlCid", { enumerable: true, get: function () { return tools_1.convertB58btcToB64urlCid; } });
Object.defineProperty(exports, "convertB64urlToB32rfcCid", { enumerable: true, get: function () { return tools_1.convertB64urlToB32rfcCid; } });
Object.defineProperty(exports, "convertB32rfcToB64urlCid", { enumerable: true, get: function () { return tools_1.convertB32rfcToB64urlCid; } });
Object.defineProperty(exports, "convertDownloadDirectoryInputCid", { enumerable: true, get: function () { return tools_1.convertDownloadDirectoryInputCid; } });
// url exports.
var url_1 = require("./utils/url");
Object.defineProperty(exports, "DEFAULT_S5_PORTAL_URL", { enumerable: true, get: function () { return url_1.DEFAULT_S5_PORTAL_URL; } });
Object.defineProperty(exports, "defaultS5PortalUrl", { enumerable: true, get: function () { return url_1.defaultS5PortalUrl; } });
Object.defineProperty(exports, "URI_S5_PREFIX", { enumerable: true, get: function () { return url_1.URI_S5_PREFIX; } });
Object.defineProperty(exports, "uriS5Prefix", { enumerable: true, get: function () { return url_1.uriS5Prefix; } });
Object.defineProperty(exports, "defaultPortalUrl", { enumerable: true, get: function () { return url_1.defaultPortalUrl; } });
Object.defineProperty(exports, "addUrlSubdomain", { enumerable: true, get: function () { return url_1.addUrlSubdomain; } });
Object.defineProperty(exports, "getSubdomainFromUrl", { enumerable: true, get: function () { return url_1.getSubdomainFromUrl; } });
Object.defineProperty(exports, "addUrlQuery", { enumerable: true, get: function () { return url_1.addUrlQuery; } });
Object.defineProperty(exports, "ensurePrefix", { enumerable: true, get: function () { return url_1.ensurePrefix; } });
Object.defineProperty(exports, "ensureUrl", { enumerable: true, get: function () { return url_1.ensureUrl; } });
Object.defineProperty(exports, "ensureUrlPrefix", { enumerable: true, get: function () { return url_1.ensureUrlPrefix; } });
Object.defineProperty(exports, "makeUrl", { enumerable: true, get: function () { return url_1.makeUrl; } });
var validation_1 = require("./utils/validation");
Object.defineProperty(exports, "throwValidationError", { enumerable: true, get: function () { return validation_1.throwValidationError; } });
Object.defineProperty(exports, "validationError", { enumerable: true, get: function () { return validation_1.validationError; } });
// constants exports.
var constants_1 = require("./utils/constants");
Object.defineProperty(exports, "cidTypeRaw", { enumerable: true, get: function () { return constants_1.cidTypeRaw; } });
Object.defineProperty(exports, "cidTypeMetadataMedia", { enumerable: true, get: function () { return constants_1.cidTypeMetadataMedia; } });
//  cidTypeMetadataFile,
Object.defineProperty(exports, "cidTypeMetadataWebApp", { enumerable: true, get: function () { return constants_1.cidTypeMetadataWebApp; } });
Object.defineProperty(exports, "cidTypeResolver", { enumerable: true, get: function () { return constants_1.cidTypeResolver; } });
Object.defineProperty(exports, "cidTypeUserIdentity", { enumerable: true, get: function () { return constants_1.cidTypeUserIdentity; } });
Object.defineProperty(exports, "cidTypeBridge", { enumerable: true, get: function () { return constants_1.cidTypeBridge; } });
Object.defineProperty(exports, "cidTypeEncrypted", { enumerable: true, get: function () { return constants_1.cidTypeEncrypted; } });
Object.defineProperty(exports, "registryS5MagicByte", { enumerable: true, get: function () { return constants_1.registryS5MagicByte; } });
Object.defineProperty(exports, "mhashBlake3Default", { enumerable: true, get: function () { return constants_1.mhashBlake3Default; } });
Object.defineProperty(exports, "mkeyEd25519", { enumerable: true, get: function () { return constants_1.mkeyEd25519; } });
Object.defineProperty(exports, "encryptionAlgorithmXChaCha20Poly1305", { enumerable: true, get: function () { return constants_1.encryptionAlgorithmXChaCha20Poly1305; } });
Object.defineProperty(exports, "encryptionAlgorithmXChaCha20Poly1305NonceSize", { enumerable: true, get: function () { return constants_1.encryptionAlgorithmXChaCha20Poly1305NonceSize; } });
Object.defineProperty(exports, "metadataMagicByte", { enumerable: true, get: function () { return constants_1.metadataMagicByte; } });
Object.defineProperty(exports, "metadataTypeMedia", { enumerable: true, get: function () { return constants_1.metadataTypeMedia; } });
Object.defineProperty(exports, "metadataTypeWebApp", { enumerable: true, get: function () { return constants_1.metadataTypeWebApp; } });
Object.defineProperty(exports, "metadataTypeDirectory", { enumerable: true, get: function () { return constants_1.metadataTypeDirectory; } });
Object.defineProperty(exports, "metadataTypeProofs", { enumerable: true, get: function () { return constants_1.metadataTypeProofs; } });
Object.defineProperty(exports, "metadataTypeUserIdentity", { enumerable: true, get: function () { return constants_1.metadataTypeUserIdentity; } });
Object.defineProperty(exports, "parentLinkTypeUserIdentity", { enumerable: true, get: function () { return constants_1.parentLinkTypeUserIdentity; } });
Object.defineProperty(exports, "registryMaxDataSize", { enumerable: true, get: function () { return constants_1.registryMaxDataSize; } });
Object.defineProperty(exports, "authPayloadVersion1", { enumerable: true, get: function () { return constants_1.authPayloadVersion1; } });
Object.defineProperty(exports, "userIdentityLinkProfile", { enumerable: true, get: function () { return constants_1.userIdentityLinkProfile; } });
Object.defineProperty(exports, "userIdentityLinkPublicFileSystem", { enumerable: true, get: function () { return constants_1.userIdentityLinkPublicFileSystem; } });
//  userIdentityLinkFollowingList,
Object.defineProperty(exports, "protocolMethodHandshakeOpen", { enumerable: true, get: function () { return constants_1.protocolMethodHandshakeOpen; } });
Object.defineProperty(exports, "protocolMethodHandshakeDone", { enumerable: true, get: function () { return constants_1.protocolMethodHandshakeDone; } });
Object.defineProperty(exports, "protocolMethodSignedMessage", { enumerable: true, get: function () { return constants_1.protocolMethodSignedMessage; } });
Object.defineProperty(exports, "protocolMethodHashQuery", { enumerable: true, get: function () { return constants_1.protocolMethodHashQuery; } });
Object.defineProperty(exports, "protocolMethodAnnouncePeers", { enumerable: true, get: function () { return constants_1.protocolMethodAnnouncePeers; } });
Object.defineProperty(exports, "protocolMethodRegistryQuery", { enumerable: true, get: function () { return constants_1.protocolMethodRegistryQuery; } });
Object.defineProperty(exports, "recordTypeStorageLocation", { enumerable: true, get: function () { return constants_1.recordTypeStorageLocation; } });
Object.defineProperty(exports, "recordTypeRegistryEntry", { enumerable: true, get: function () { return constants_1.recordTypeRegistryEntry; } });
Object.defineProperty(exports, "metadataExtensionLicenses", { enumerable: true, get: function () { return constants_1.metadataExtensionLicenses; } });
Object.defineProperty(exports, "metadataExtensionDonationKeys", { enumerable: true, get: function () { return constants_1.metadataExtensionDonationKeys; } });
Object.defineProperty(exports, "metadataExtensionWikidataClaims", { enumerable: true, get: function () { return constants_1.metadataExtensionWikidataClaims; } });
Object.defineProperty(exports, "metadataExtensionLanguages", { enumerable: true, get: function () { return constants_1.metadataExtensionLanguages; } });
Object.defineProperty(exports, "metadataExtensionSourceUris", { enumerable: true, get: function () { return constants_1.metadataExtensionSourceUris; } });
Object.defineProperty(exports, "metadataExtensionUpdateCID", { enumerable: true, get: function () { return constants_1.metadataExtensionUpdateCID; } });
Object.defineProperty(exports, "metadataExtensionPreviousVersions", { enumerable: true, get: function () { return constants_1.metadataExtensionPreviousVersions; } });
Object.defineProperty(exports, "metadataExtensionTimestamp", { enumerable: true, get: function () { return constants_1.metadataExtensionTimestamp; } });
Object.defineProperty(exports, "metadataExtensionTags", { enumerable: true, get: function () { return constants_1.metadataExtensionTags; } });
Object.defineProperty(exports, "metadataExtensionCategories", { enumerable: true, get: function () { return constants_1.metadataExtensionCategories; } });
Object.defineProperty(exports, "metadataExtensionViewTypes", { enumerable: true, get: function () { return constants_1.metadataExtensionViewTypes; } });
Object.defineProperty(exports, "metadataExtensionBasicMediaMetadata", { enumerable: true, get: function () { return constants_1.metadataExtensionBasicMediaMetadata; } });
Object.defineProperty(exports, "metadataExtensionBridge", { enumerable: true, get: function () { return constants_1.metadataExtensionBridge; } });
Object.defineProperty(exports, "metadataMediaDetailsDuration", { enumerable: true, get: function () { return constants_1.metadataMediaDetailsDuration; } });
Object.defineProperty(exports, "metadataMediaDetailsIsLive", { enumerable: true, get: function () { return constants_1.metadataMediaDetailsIsLive; } });
Object.defineProperty(exports, "metadataProofTypeSignature", { enumerable: true, get: function () { return constants_1.metadataProofTypeSignature; } });
Object.defineProperty(exports, "metadataProofTypeTimestamp", { enumerable: true, get: function () { return constants_1.metadataProofTypeTimestamp; } });
Object.defineProperty(exports, "storageLocationTypeArchive", { enumerable: true, get: function () { return constants_1.storageLocationTypeArchive; } });
Object.defineProperty(exports, "storageLocationTypeFile", { enumerable: true, get: function () { return constants_1.storageLocationTypeFile; } });
Object.defineProperty(exports, "storageLocationTypeFull", { enumerable: true, get: function () { return constants_1.storageLocationTypeFull; } });
Object.defineProperty(exports, "storageLocationTypeBridge", { enumerable: true, get: function () { return constants_1.storageLocationTypeBridge; } });
